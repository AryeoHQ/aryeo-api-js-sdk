/*
 * Aryeo
 * # Introduction The Aryeo API gives access to the Aryeo platform. You can use your favorite HTTP/REST library for interfacing with the Aryeo API, or you can use one of our SDKs. Our SDKs are procedurally generated and a great starting point for experimental testing. If there is an additional language or framework that you want to see supported, then please reach and out and make a contribution!  <p align=\"center\"> <a href=\"https://github.com/AryeoHQ/aryeo-api-dart-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/dart.svg\" alt=\"Dart\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-go-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/go.svg\" alt=\"Go\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-js-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/js.svg\" alt=\"Node JS\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-php-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/php.svg\" alt=\"PHP\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-ruby-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/ruby.svg\" alt=\"Ruby\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-rust-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/rust.svg\" alt=\"Rust\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> <a href=\"https://github.com/AryeoHQ/aryeo-api-swift-sdk\"><img src=\"https://raw.githubusercontent.com/AryeoHQ/aryeo-api-docs/master/public/images/swift.svg\" alt=\"Swift\" width=\"44\" style=\"padding:10px;border: 1px solid #d3d3d3;border-radius: 5px;margin:4px;\"/></a> </p>  **Note**: Some SDKs may require you to manually add the `Accept` header to all Aryeo API requests. If so, use the value `application/json`.  # Authentication To start using the Aryeo API, you will need to generate an API key from your group's developer settings. You can then authenticate to the Aryeo API by providing your key in the appropriate request header. Requests made without an API key will result in a `401 Unauthorized` error. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jarrod@aryeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Currency} from './Currency';
import {PartialListing} from './PartialListing';

/**
 * The Order model module.
 * @module model/Order
 * @version 1.0.0
 */
export class Order {
  /**
   * Constructs a new <code>Order</code>.
   * A payment request for some content or service.
   * @alias module:model/Order
   * @class
   * @param id {String} ID of the order.
   * @param displayId {Number} A vanity id to be displayed for the order. For example, \"Order #1000\".
   * @param totalPriceCents {Number} The total price of the order given in cents.
   * @param currency {module:model/Currency} 
   * @param paymentStatus {module:model/Order.PaymentStatusEnum} The payment status of the order.
   * @param fulfillmentStatus {module:model/Order.FulfillmentStatusEnum} The fulfillment status of the order.
   */
  constructor(id, displayId, totalPriceCents, currency, paymentStatus, fulfillmentStatus) {
    this.id = id;
    this.displayId = displayId;
    this.totalPriceCents = totalPriceCents;
    this.currency = currency;
    this.paymentStatus = paymentStatus;
    this.fulfillmentStatus = fulfillmentStatus;
  }

  /**
   * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Order} obj Optional instance to populate.
   * @return {module:model/Order} The populated <code>Order</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Order();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('display_id'))
        obj.displayId = ApiClient.convertToType(data['display_id'], 'Number');
      if (data.hasOwnProperty('total_price_cents'))
        obj.totalPriceCents = ApiClient.convertToType(data['total_price_cents'], 'Number');
      if (data.hasOwnProperty('currency'))
        obj.currency = Currency.constructFromObject(data['currency']);
      if (data.hasOwnProperty('payment_status'))
        obj.paymentStatus = ApiClient.convertToType(data['payment_status'], 'String');
      if (data.hasOwnProperty('payment_url'))
        obj.paymentUrl = ApiClient.convertToType(data['payment_url'], 'String');
      if (data.hasOwnProperty('listing'))
        obj.listing = PartialListing.constructFromObject(data['listing']);
      if (data.hasOwnProperty('fulfillment_status'))
        obj.fulfillmentStatus = ApiClient.convertToType(data['fulfillment_status'], 'String');
    }
    return obj;
  }
}

/**
 * ID of the order.
 * @member {String} id
 */
Order.prototype.id = undefined;

/**
 * A vanity id to be displayed for the order. For example, \"Order #1000\".
 * @member {Number} displayId
 */
Order.prototype.displayId = undefined;

/**
 * The total price of the order given in cents.
 * @member {Number} totalPriceCents
 */
Order.prototype.totalPriceCents = undefined;

/**
 * @member {module:model/Currency} currency
 */
Order.prototype.currency = undefined;

/**
 * Allowed values for the <code>paymentStatus</code> property.
 * @enum {String}
 * @readonly
 */
Order.PaymentStatusEnum = {
  /**
   * value: "paid"
   * @const
   */
  paid: "paid",

  /**
   * value: "unpaid"
   * @const
   */
  unpaid: "unpaid"
};
/**
 * The payment status of the order.
 * @member {module:model/Order.PaymentStatusEnum} paymentStatus
 */
Order.prototype.paymentStatus = undefined;

/**
 * A URL for to pay for the order.
 * @member {String} paymentUrl
 */
Order.prototype.paymentUrl = undefined;

/**
 * @member {module:model/PartialListing} listing
 */
Order.prototype.listing = undefined;

/**
 * Allowed values for the <code>fulfillmentStatus</code> property.
 * @enum {String}
 * @readonly
 */
Order.FulfillmentStatusEnum = {
  /**
   * value: "fulfilled"
   * @const
   */
  fulfilled: "fulfilled",

  /**
   * value: "unfulfilled"
   * @const
   */
  unfulfilled: "unfulfilled"
};
/**
 * The fulfillment status of the order.
 * @member {module:model/Order.FulfillmentStatusEnum} fulfillmentStatus
 */
Order.prototype.fulfillmentStatus = undefined;

